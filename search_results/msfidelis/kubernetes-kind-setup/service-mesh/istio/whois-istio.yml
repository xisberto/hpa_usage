---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: whois
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: whois
  namespace: whois
  labels:
    k8s-app: whois
    app: whois
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: whois
  template:
    metadata:
      labels:
        k8s-app: whois
        app: whois
        name: whois
        version: v1
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - image: msfidelis/whois:v1
        name: whois
        ports:
        - name: http
          containerPort: 8080
        resources:
          requests:
            cpu: "256m"
            memory: "512m"
---
kind: Service
apiVersion: v1
metadata:
  name: whois
  namespace: whois
spec:
  selector:
    app: whois
  ports:
    - protocol: TCP
      port: 8080
      name: web
  type: ClusterIP

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: whois
  namespace: whois
spec:
  maxReplicas: 10
  minReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 30
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: whois
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: whois-gateway
  namespace: whois
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 15090
      name: http
      protocol: HTTP
    hosts:
    - "whois.k8s.raj.ninja"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: whois
  namespace: whois
spec:
  hosts:
  - "whois.k8s.raj.ninja"
  gateways:
  - whois-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: whois
        port:
          number: 8080
